@model ViewIssueModel

@{
    var DateFormatString = "dd-MMM-yyyy HH:mm";
}

@if (Model.Issue.SLA != null && Model[ItemAttributeVisibility.SLA])
{
    <div class="margin-bottom-20">
        <div class="touch-info bold">
            <span class="box">
                <span class="label">@GetResourceTemplate( ResourceKeys.SLA )</span>
            </span> 
            @(Model.Issue.SLA.Name)
            <span class="view-sla-@Model.Issue.SlaStatusCode">@(Model.SLAState)</span>
            <span class="view-sla-@Model.Issue.SlaStatusCode sla-timer" 
                        data-sla-minutes="@Model.Issue.SLATimeLeftMinutes" 
                        data-sla-state="@Model.Issue.Entity.SLAStatus">@(Model.Issue.SLATimeLeftFull)</span>
            <span class="view-sla-@Model.Issue.SlaStatusCode sla-out-of-hours">(@GetResource( ResourceKeys.OutOfHours ))</span>
        </div>
        <div class="touch-info bold">
            <span class="box">
                <span class="label"></span>
            </span>
            @if ( Model.SlaBreachDate != null )
            {
                <span class="">@GetResourceTemplate( ResourceKeys.SlaBreachDate )</span>
                <span id="breach-date" class="view-sla-@Model.Issue.Entity.SLAStatus">
                    @Model.SlaBreachDate.Value.ToString( DateFormatString )
                </span>
            }
        </div>
    </div>
}

@if (Model.SourceLink.HasValue())
{
    if (Model[ItemAttributeVisibility.Source])
    {
        <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.Created)</span></span> @Model.Issue.Created.ToString( DateFormatString ) &rarr; @GetResourceTemplate(ResourceKeys.From, Resourcing.Lower) @Html.Raw(Model.SourceLink)</div>
    }         
}
else
{
    if (Model[ItemAttributeVisibility.DateCreated])
    { 
        <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.Created)</span></span> @Model.Issue.Created.ToString( DateFormatString ) &rarr; @Model.Issue.Reporter @if(Model.Issue.Entity.ReportedBy != Model.Issue.Entity.Creator){<text>(via @(Model.Issue.Creator))</text>} </div>
    }
}

@if (Model[ItemAttributeVisibility.DateRevised])
{
    <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.Revised)</span></span> @Model.Issue.Revised.ToString( DateFormatString ) @if (Model[ItemAttributeVisibility.AssociatedHistory]){ <text>&rarr;</text> @Model.Issue.Reviser }</div>
}

@if (Model[ItemAttributeVisibility.ClosedDate])
{
    <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.ClosedDate)</span></span> @(Model.Issue.ClosedDate == null ? "" : Model.Issue.ClosedDate.Value.ToString( DateFormatString ))</div>
}
                                                                                                                                                                                                            
@if (Model[ItemAttributeVisibility.ResolvedDate])
{
    <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.ResolvedDate)</span></span> @(Model.Issue.ResolvedDate == null ? "" : Model.Issue.ResolvedDate.Value.ToString( DateFormatString ))</div>
}
                                                                                                                                                                                                            
@if (Model[ItemAttributeVisibility.Elapsed])
{
    TimeSpan span = Model.Issue.ElapsedTime;

    <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.Elapsed)</span></span> @string.Format("{0}d {1}h {2}m", span.Days, span.Hours, span.Minutes)</div>
}

@if (Model[ItemAttributeVisibility.Organization] && Model.Issue.Organization != null)
{
    <div class="touch-info"><span class="box"><span class="label">@GetResourceTemplate(ResourceKeys.Organization)</span></span> @string.Format("{0}", Model.Issue.Organization.Name)</div>
}